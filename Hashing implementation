#include<iostream>
using namespace std;
class node{
	public:
		long long data;
		node* next;
};
class hashi{

	node* hashtable[10];
	public:
		hashi(){
			
		
			for(int i=0;i<10;i++){
				hashtable[i]=NULL;
			}
		}
		
		void insert(){
			long long key;
			cout<<"Enter value to be inserted : "<<endl;
			cin>>key;
			int loc=key%10;
			node* p=new node();
			p->data=key;
			p->next=NULL;
			
			if(hashtable[loc]==NULL){
				hashtable[loc]=p;
				
			}
			else{
				node* temp=hashtable[loc];
				
				while(temp->next!=NULL){
					temp=temp->next;
					
				}
				temp->next=p;
			}
	
		}
		void display(){
			for(int i=0;i<10;i++){
				node* temp=hashtable[i];
				if(temp==NULL){
					cout<<"0"<<endl;
				}
				else{
					while(temp!=NULL){
						cout<<temp->data<<" ";
						temp=temp->next;
					}
					cout<<endl;
				}
			}
		}
		void search(){
			bool found=false;
			long long element;
			cout<<"Enter element to be search :"<<endl;
			cin>>element;
			
			int loc=element%10;
			node* temp=hashtable[loc];
			if(temp==NULL){
				cout<<"Element not found"<<endl;
			}
			else{
				while(temp!=NULL){
					if(temp->data==element){
						
						found=true;
						break;
					}
					
					temp=temp->next;
				
				}
				if(found){
					cout<<"Element found"<<endl;
				}
				else{
					cout<<"Element not found"<<endl;
				}
			}
		}
};
int main(){
	hashi h1;
	int ch;
	cout<<"1.Insert\n2.Display\n3.search\n4.Exit";
	
	while(1){
    	cout<<endl<<"Enter your choice"<<endl;
    	cin>>ch;
    	
    	switch(ch){
    		case 1:
    			h1.insert();
    			break;
    		case 2:
    			h1.display();
    			break;
    		case 3:
    			h1.search();
    			break;
    		case 4:
    			exit(1);
    			
    			break;
    		default:
    			cout<<"Enter valid choice"<<endl;
    	}
    }
	return 0;
}
